// <auto-generated />
using System;
using CP_ComputerClub.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CP_ComputerClub.Migrations
{
    [DbContext(typeof(ComputerClubContext))]
    [Migration("20221007134825_AddColumnComputerNumber")]
    partial class AddColumnComputerNumber
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("CP_ComputerClub.Models.Computer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("IsBroken")
                        .HasColumnType("bit");

                    b.Property<bool>("IsBusy")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("TimeEnd")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("TimeStart")
                        .HasColumnType("datetime");

                    b.Property<int>("TypePcid")
                        .HasColumnType("int")
                        .HasColumnName("TypePCId");

                    b.HasKey("Id");

                    b.HasIndex("TypePcid");

                    b.ToTable("Computers");
                });

            modelBuilder.Entity("CP_ComputerClub.Models.FeaturesPc", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Cpu")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CPU");

                    b.Property<string>("Headphones")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Keyboard")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Monitor")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Mouse")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("Price")
                        .HasColumnType("money");

                    b.Property<string>("Ram")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("RAM");

                    b.Property<string>("TypePc")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("TypePC");

                    b.Property<string>("VideoCard")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("FeaturesPC", (string)null);
                });

            modelBuilder.Entity("CP_ComputerClub.Models.History", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ComputerNumber")
                        .HasColumnType("int");

                    b.Property<DateTime>("TimeEnd")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("TimeStart")
                        .HasColumnType("datetime");

                    b.Property<decimal>("TotalSum")
                        .HasColumnType("money");

                    b.Property<int>("TypePcid")
                        .HasColumnType("int")
                        .HasColumnName("TypePCId");

                    b.HasKey("Id");

                    b.HasIndex("TypePcid");

                    b.ToTable("History", (string)null);
                });

            modelBuilder.Entity("CP_ComputerClub.Models.Computer", b =>
                {
                    b.HasOne("CP_ComputerClub.Models.FeaturesPc", "TypePc")
                        .WithMany("Computers")
                        .HasForeignKey("TypePcid")
                        .IsRequired()
                        .HasConstraintName("FK__Computers__TypeP__440B1D61");

                    b.Navigation("TypePc");
                });

            modelBuilder.Entity("CP_ComputerClub.Models.History", b =>
                {
                    b.HasOne("CP_ComputerClub.Models.FeaturesPc", "TypePc")
                        .WithMany("Histories")
                        .HasForeignKey("TypePcid")
                        .IsRequired()
                        .HasConstraintName("FK__History__TypePCI__4AB81AF0");

                    b.Navigation("TypePc");
                });

            modelBuilder.Entity("CP_ComputerClub.Models.FeaturesPc", b =>
                {
                    b.Navigation("Computers");

                    b.Navigation("Histories");
                });
#pragma warning restore 612, 618
        }
    }
}
